
// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that critically analyzes an answer and its supporting evidence.
 *
 * - critiqueAgent - A function that handles the critical analysis process.
 * - CritiqueAgentInput - The input type for the critiqueAgent function.
 * - CritiqueAgentOutput - The return type for the critiqueAgent function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EvidenceSchema = z.object({
  claim: z.string().describe('Specific aspect of the claim being supported'),
  support: z.string().describe('Detailed evidence with statistics, studies, or expert consensus'),
  quality: z.string().describe('high|moderate|low'),
  source: z.string().describe('Credible source citation (journal, institution, etc.)'),
});

export type Evidence = z.infer<typeof EvidenceSchema>;

const CritiqueAgentInputSchema = z.object({
  answer: z.string().describe('The answer to be analyzed.'),
  evidence: z.array(EvidenceSchema).describe('The supporting evidence for the answer.'),
});

export type CritiqueAgentInput = z.infer<typeof CritiqueAgentInputSchema>;

const CritiqueAgentOutputSchema = z.string().describe('The critical analysis of the answer and evidence.');

export type CritiqueAgentOutput = z.infer<typeof CritiqueAgentOutputSchema>;

export async function critiqueAgent(input: CritiqueAgentInput): Promise<CritiqueAgentOutput> {
  return critiqueAgentFlow(input);
}

const critiqueAgentPrompt = ai.definePrompt({
  name: 'critiqueAgentPrompt',
  input: {schema: CritiqueAgentInputSchema},
  output: {schema: CritiqueAgentOutputSchema},
  prompt: `You are a critical analysis agent. Analyze this answer and its supporting evidence:\n\nANSWER: "{{answer}}"\n\nEVIDENCE:\n{{#each evidence}}\n- {{this.claim}}: {{this.support}} (Quality: {{this.quality}})\n{{/each}}\n\nProvide a critical analysis that:\n1. Identifies logical flaws or inconsistencies\n2. Points out potential biases or oversimplifications\n3. Evaluates the strength of the evidence\n4. Highlights missing perspectives or considerations\n5. Questions unstated assumptions\n\nBe thorough but constructive. Your goal is to strengthen the analysis, not tear it down.`,
});

const critiqueAgentFlow = ai.defineFlow(
  {
    name: 'critiqueAgentFlow',
    inputSchema: CritiqueAgentInputSchema,
    outputSchema: CritiqueAgentOutputSchema,
  },
  async (input): Promise<string> => {
    const llmResponse = await critiqueAgentPrompt(input);
    // Use optional chaining in case llmResponse itself is null/undefined
    const critiqueText = llmResponse?.output; 
    
    if (typeof critiqueText === 'string') {
      return critiqueText;
    }
    // If critiqueText is null, undefined, or any non-string type, default to an empty string.
    return ""; 
  }
);

